{"version":3,"file":"static/js/881.1175f838.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/getMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"link\":\"MovieList_link__+cn-g\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport c from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={c.list}>\n        {movies.map(({ id, title }) => (\n          <li key={id} className={c.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={c.link}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"submit\":\"Movies_submit__Nxgt8\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/getMoviesApi';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Flip, toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport c from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formInputValue = form.elements.search.value.toLowerCase().trim();\n    if (!formInputValue) {\n      toast.warn('Look, the input field is empty! Please, make a choice.', {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3500,\n        theme: 'dark',\n        transition: Flip,\n      });\n    }\n    setSearchParams(formInputValue !== '' ? { query: formInputValue } : {});\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const receivedMovies = await getSearchMovies(movieName);\n        setMovies(receivedMovies);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={c.form}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          className={c.input}\n          placeholder=\"Enter the movie title\"\n        />\n\n        <button type=\"submit\" className={c.submit}>\n          <span className={c.btnlabel}>Search</span>\n        </button>\n      </form>\n      <ToastContainer />\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '109c81fd83da243f6eda059647fc5d69';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = async () => {\n  const trendingUrl = `${BASE_URL}trending/movie/day?`;\n  const { data } = await axios.get(trendingUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.results;\n};\n\n\nconst getSearchMovies = async search => {\n  const searchUrl = `${BASE_URL}search/movie?`;\n  const { data } = await axios.get(searchUrl, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\n\nconst getMovieDetails = async movieId => {\n  const detailsUrl = `${BASE_URL}movie/${movieId}?`;\n  const { data } = await axios.get(detailsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n\nconst getMovieCredits = async movieId => {\n  const creditsUrl = `${BASE_URL}movie/${movieId}/credits?`;\n  const { data } = await axios.get(creditsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\n\nconst getMovieReviews = async movieId => {\n  const reviewsUrl = `${BASE_URL}movie/${movieId}/reviews?`;\n  const { data } = await axios.get(reviewsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["movies","location","useLocation","className","c","map","id","title","to","state","from","useState","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","movieName","get","useEffect","fetchMovies","getSearchMovies","receivedMovies","console","log","onSubmit","e","preventDefault","form","target","formInputValue","elements","search","value","toLowerCase","trim","toast","position","autoClose","theme","transition","Flip","query","reset","type","name","placeholder","length","Loader","API_KEY","BASE_URL","getTrendingMovies","trendingUrl","axios","params","api_key","language","data","results","searchUrl","include_adult","page","getMovieDetails","movieId","detailsUrl","getMovieCredits","creditsUrl","cast","getMovieReviews","reviewsUrl"],"sourceRoot":""}