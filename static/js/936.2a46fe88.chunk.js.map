{"version":3,"file":"static/js/936.2a46fe88.chunk.js","mappings":"+LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAqF,wB,SCkCrF,EA/BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEI,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GACfE,UAAWC,EAHb,SAKGG,KANID,EADC,OAcnB,C,iKCvBD,G,QAAwB,qB,SCsCxB,EA/Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGaK,EAAAA,EAAAA,MAHb,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAMhBJ,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAA,sCAPgB,yBAShBR,GAAa,GATG,4EAAH,qDAYjBI,GACD,GAAE,KAGD,6BACE,eAAIf,UAAWC,EAAf,SAAwB,+BACL,IAAlBJ,EAAOuB,SAAgB,SAACC,EAAA,EAAD,CAAWxB,OAAQA,IAC1Ca,IAAa,SAACY,EAAA,EAAD,IACbV,IAAS,SAAC,KAAD,CAAgBW,UAAW,QAG1C,C,mMCnCKC,EAAU,mCACVC,EAAW,gCAEXT,EAAiB,mCAAG,+FAClBU,EADkB,UACDD,EADC,gCAEDE,EAAAA,EAAAA,IAAUD,EAAa,CAC5CE,OAAQ,CACNC,QAASL,EACTM,SAAU,WALU,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAQjBA,EAAKC,SARY,2CAAH,qDAYjBC,EAAe,mCAAG,WAAMC,GAAN,kFAChBC,EADgB,UACDV,EADC,0BAECE,EAAAA,EAAAA,IAAUQ,EAAW,CAC1CP,OAAQ,CACNC,QAASL,EACTY,MAAOF,EACPG,eAAe,EACfP,SAAU,QACVQ,KAAM,KARY,uBAEdP,EAFc,EAEdA,KAFc,kBAWfA,EAAKC,SAXU,2CAAH,sDAefO,EAAe,mCAAG,WAAMC,GAAN,kFAChBC,EADgB,UACAhB,EADA,iBACiBe,EADjB,cAECb,EAAAA,EAAAA,IAAUc,EAAY,CAC3Cb,OAAQ,CACNC,QAASL,EACTM,SAAU,WALQ,uBAEdC,EAFc,EAEdA,KAFc,kBASfA,GATe,2CAAH,sDAafW,EAAe,mCAAG,WAAMF,GAAN,kFAChBG,EADgB,UACAlB,EADA,iBACiBe,EADjB,sBAECb,EAAAA,EAAAA,IAAUgB,EAAY,CAC3Cf,OAAQ,CACNC,QAASL,EACTM,SAAU,WALQ,uBAEdC,EAFc,EAEdA,KAFc,kBAQfA,EAAKa,MARU,2CAAH,sDAYfC,EAAe,mCAAG,WAAML,GAAN,kFAChBM,EADgB,UACArB,EADA,iBACiBe,EADjB,sBAECb,EAAAA,EAAAA,IAAUmB,EAAY,CAC3ClB,OAAQ,CACNC,QAASL,EACTM,SAAU,QACVQ,KAAM,KANY,uBAEdP,EAFc,EAEdA,KAFc,kBAUfA,EAAKC,SAVU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/getMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"link\":\"MovieList_link__+cn-g\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport c from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={c.list}>\n        {movies.map(({ id, title }) => (\n          <li key={id} className={c.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={c.link}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/getMoviesApi';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport c from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getTrendingMovies();\n        setMovies(receivedTrends);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`Upss!!! Fetch error: ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  return (\n    <main>\n      <h1 className={c.title}>Trending Movies of the Day</h1>\n      {movies.length !== 0 && <MovieList movies={movies} />}\n      {isLoading && <Loader />}\n      {error && <ToastContainer autoClose={5000} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '109c81fd83da243f6eda059647fc5d69';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = async () => {\n  const trendingUrl = `${BASE_URL}trending/movie/day?`;\n  const { data } = await axios.get(trendingUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.results;\n};\n\n\nconst getSearchMovies = async search => {\n  const searchUrl = `${BASE_URL}search/movie?`;\n  const { data } = await axios.get(searchUrl, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\n\nconst getMovieDetails = async movieId => {\n  const detailsUrl = `${BASE_URL}movie/${movieId}?`;\n  const { data } = await axios.get(detailsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n\nconst getMovieCredits = async movieId => {\n  const creditsUrl = `${BASE_URL}movie/${movieId}/credits?`;\n  const { data } = await axios.get(creditsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\n\nconst getMovieReviews = async movieId => {\n  const reviewsUrl = `${BASE_URL}movie/${movieId}/reviews?`;\n  const { data } = await axios.get(reviewsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["movies","location","useLocation","className","c","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrends","getTrendingMovies","receivedTrends","message","toast","length","MovieList","Loader","autoClose","API_KEY","BASE_URL","trendingUrl","axios","params","api_key","language","data","results","getSearchMovies","search","searchUrl","query","include_adult","page","getMovieDetails","movieId","detailsUrl","getMovieCredits","creditsUrl","cast","getMovieReviews","reviewsUrl"],"sourceRoot":""}