{"version":3,"file":"static/js/76.4479138b.chunk.js","mappings":"sQACA,EAAuB,mBAAvB,EAAgD,kBAAhD,EAAgF,0BAAhF,EAAsH,wBAAtH,EAA0J,wB,SC+D1J,EAzDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGWG,EAAAA,EAAAA,IAAgBT,GAH3B,OAGRU,EAHQ,OAIdN,EAAQM,GAJM,gDAMdC,QAAQC,IAAR,MANc,yBAQdN,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,CAACR,IAECG,EAIL,OACE,gCACGE,IAAa,SAACQ,EAAA,EAAD,IACbV,EAAKW,OAAS,GACb,wBACGX,EAAKY,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACrB,gBAAaC,UAAWC,EAAxB,UACGF,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKN,EACLG,UAAWC,EACXG,MAAM,SAGR,gBAAKJ,UAAWC,EAAhB,SAA+B,qBAEjC,4BACE,cAAGD,UAAWC,EAAd,SAA4BJ,KAC5B,eAAGG,UAAWC,EAAd,UAA2B,eACd,uBAAIH,YAdZF,EADY,OAsBzB,yBAAK,yDAIZ,C,mMC5DKS,EAAU,mCACVC,EAAW,gCAEXC,EAAiB,mCAAG,+FAClBC,EADkB,UACDF,EADC,gCAEDG,EAAAA,EAAAA,IAAUD,EAAa,CAC5CE,OAAQ,CACNC,QAASN,EACTO,SAAU,WALU,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAQjBA,EAAKC,SARY,2CAAH,qDAYjBC,EAAe,mCAAG,WAAMC,GAAN,kFAChBC,EADgB,UACDX,EADC,0BAECG,EAAAA,EAAAA,IAAUQ,EAAW,CAC1CP,OAAQ,CACNC,QAASN,EACTa,MAAOF,EACPG,eAAe,EACfP,SAAU,QACVQ,KAAM,KARY,uBAEdP,EAFc,EAEdA,KAFc,kBAWfA,EAAKC,SAXU,2CAAH,sDAefO,EAAe,mCAAG,WAAM1C,GAAN,kFAChB2C,EADgB,UACAhB,EADA,iBACiB3B,EADjB,cAEC8B,EAAAA,EAAAA,IAAUa,EAAY,CAC3CZ,OAAQ,CACNC,QAASN,EACTO,SAAU,WALQ,uBAEdC,EAFc,EAEdA,KAFc,kBASfA,GATe,2CAAH,sDAafzB,EAAe,mCAAG,WAAMT,GAAN,kFAChB4C,EADgB,UACAjB,EADA,iBACiB3B,EADjB,sBAEC8B,EAAAA,EAAAA,IAAUc,EAAY,CAC3Cb,OAAQ,CACNC,QAASN,EACTO,SAAU,WALQ,uBAEdC,EAFc,EAEdA,KAFc,kBAQfA,EAAK/B,MARU,2CAAH,sDAYf0C,EAAe,mCAAG,WAAM7C,GAAN,kFAChB8C,EADgB,UACAnB,EADA,iBACiB3B,EADjB,sBAEC8B,EAAAA,EAAAA,IAAUgB,EAAY,CAC3Cf,OAAQ,CACNC,QAASN,EACTO,SAAU,QACVQ,KAAM,KANY,uBAEdP,EAFc,EAEdA,KAFc,kBAUfA,EAAKC,SAVU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/getMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"imgNotFound\":\"Cast_imgNotFound__9QHx1\",\"actorName\":\"Cast_actorName__XabVA\",\"character\":\"Cast_character__tKDlA\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'services/getMoviesApi';\nimport { Loader } from 'components/Loader/Loader';\n\nimport c from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        const getCredits = await getMovieCredits(movieId);\n        setCast(getCredits);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <ul>\n          {cast.slice(0, 19).map(({ id, name, character, profile_path }) => (\n            <li key={id} className={c.item}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  className={c.img}\n                  width=\"100\"\n                />\n              ) : (\n                <div className={c.imgNotFound}>Image not found</div>\n              )}\n              <div>\n                <p className={c.actorName}>{name}</p>\n                <p className={c.character}>\n                  Character: <b>{character}</b>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>We don't have any cast information for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '109c81fd83da243f6eda059647fc5d69';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = async () => {\n  const trendingUrl = `${BASE_URL}trending/movie/day?`;\n  const { data } = await axios.get(trendingUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.results;\n};\n\n\nconst getSearchMovies = async search => {\n  const searchUrl = `${BASE_URL}search/movie?`;\n  const { data } = await axios.get(searchUrl, {\n    params: {\n      api_key: API_KEY,\n      query: search,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\n\nconst getMovieDetails = async movieId => {\n  const detailsUrl = `${BASE_URL}movie/${movieId}?`;\n  const { data } = await axios.get(detailsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n\nconst getMovieCredits = async movieId => {\n  const creditsUrl = `${BASE_URL}movie/${movieId}/credits?`;\n  const { data } = await axios.get(creditsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\n\nconst getMovieReviews = async movieId => {\n  const reviewsUrl = `${BASE_URL}movie/${movieId}/reviews?`;\n  const { data } = await axios.get(reviewsUrl, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchCast","getMovieCredits","getCredits","console","log","Loader","length","slice","map","id","name","character","profile_path","className","c","src","alt","width","API_KEY","BASE_URL","getTrendingMovies","trendingUrl","axios","params","api_key","language","data","results","getSearchMovies","search","searchUrl","query","include_adult","page","getMovieDetails","detailsUrl","creditsUrl","getMovieReviews","reviewsUrl"],"sourceRoot":""}